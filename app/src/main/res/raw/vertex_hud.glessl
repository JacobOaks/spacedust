
/**
 * Vertex shader program used for rendering a game world.
 * Uses: - vertex position
 *       - object position
 *       - object scale
 *       - aspect ratio
 */

// attributes
attribute vec2 vertex_position;
attribute vec2 tex_coords;
varying vec2 tex_coords_f;

// object uniforms
uniform float obj_x;
uniform float obj_y;
uniform float obj_scale_x;
uniform float obj_scale_y;

// other uniforms
uniform float aspect_ratio;

void main() {

    // pass through texture coordinates
    tex_coords_f = tex_coords;

    // apply object position and scale
    // (model pos -> aspect pos)
    vec2 pos = vec2(vertex_position.x * obj_scale_x, vertex_position.y * obj_scale_y);
    pos += vec2(obj_x, obj_y);

    // apply aspect ratio
    // (aspect pos -> normalized pos)
    if  (aspect_ratio < 1.0f)
        pos.y *= aspect_ratio;
    else
        pos.x /= aspect_ratio;

    // set final position
    gl_Position = vec4(pos.x, pos.y, 0, 1);
}